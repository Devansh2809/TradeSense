CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(50) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL, -- Store hashed passwords
    Email VARCHAR(100) UNIQUE NOT NULL,
    Role ENUM('admin', 'user') DEFAULT 'user',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Stocks (
    StockSymbol VARCHAR(10) PRIMARY KEY,  
    CompanyName VARCHAR(100) NOT NULL,
    Sector VARCHAR(50)
);

CREATE TABLE Portfolio (
    PortfolioID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    StockSymbol VARCHAR(10),
    Quantity INT NOT NULL CHECK (Quantity >= 0),
    PurchasePrice DECIMAL(10,2) NOT NULL CHECK (PurchasePrice >= 0),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (StockSymbol) REFERENCES Stocks(StockSymbol) ON DELETE CASCADE,
    UNIQUE (UserID, StockSymbol) -- Prevent duplicate stock entries for a user
);

CREATE TABLE Transactions (
    TransactionID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    StockSymbol VARCHAR(10),
    Quantity INT NOT NULL CHECK (Quantity > 0),
    TransactionType ENUM('BUY', 'SELL') NOT NULL,
    TransactionPrice DECIMAL(10,2) NOT NULL CHECK (TransactionPrice >= 0),
    TransactionFee DECIMAL(10,2) DEFAULT 0,
    Status ENUM('Pending', 'Completed', 'Failed') DEFAULT 'Completed',
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (StockSymbol) REFERENCES Stocks(StockSymbol) ON DELETE CASCADE
);

CREATE TABLE StockPrices (
    StockSymbol VARCHAR(10),
    Date DATE NOT NULL,
    Price DECIMAL(10,2) NOT NULL CHECK (Price >= 0),
    PRIMARY KEY (StockSymbol, Date),
    FOREIGN KEY (StockSymbol) REFERENCES Stocks(StockSymbol) ON DELETE CASCADE
);
